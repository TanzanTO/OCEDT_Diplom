
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ВКМ_СформироватьДвижения();

	ВКМ_РассчитатьОклад();
	ВКМ_РассчитьтьОтпуск();
	ВКМ_РассчитатьУдержания();

	ВКМ_ДвиженияВзаиморасчетыССотрудниками();
	ВКМ_ДвиженияУчетОтпускаСотрудников();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого Строка Из НачислениеЗарплаты Цикл
		Если Строка.ДатаНачала > Строка.ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 дата начала больше даты окончания",
				Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;

		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ФиксированнаяПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 не верный вид расчета", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ВКМ_СформироватьДвижения()

	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаНачала,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаОкончания,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_Док
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.НачислениеЗарплаты КАК ВКМ_НачислениеЗарплатыНачислениеЗарплаты
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаНачала,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаОкончания,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник,
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот
	|ПОМЕСТИТЬ ВТ_ВыполненныеРаботы
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,,) КАК
	|		ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
	|ПОМЕСТИТЬ ВТ_Процент
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Док.Сотрудник КАК Сотрудник,
	|	ВТ_Док.ВидРасчета КАК ВидРасчета,
	|	ВТ_Док.ДатаНачала КАК ДатаНачала,
	|	ВТ_Док.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_Док.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТ_Процент.ПроцентОтРабот КАК ПроцентОтРабот,
	|	ВТ_ВыполненныеРаботы.СуммаКОплатеОборот КАК СуммаКОплате
	|ИЗ
	|	ВТ_Док КАК ВТ_Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыполненныеРаботы КАК ВТ_ВыполненныеРаботы
	|		ПО ВТ_Док.Сотрудник = ВТ_ВыполненныеРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Процент КАК ВТ_Процент
	|		ПО ВТ_Док.Сотрудник = ВТ_Процент.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл

		Если ТипЗнч(Результат.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда

			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ПериодДействияНачало = Результат.ДатаНачала;
			Движение.ПериодДействияКонец = Результат.ДатаОкончания;
			Движение.ВидРасчета = Результат.ВидРасчета;
			Движение.Сотрудник = Результат.Сотрудник;
			Движение.ГрафикРаботы = Результат.ГрафикРаботы;

			Если Результат.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда

				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Результат.ДатаНачала, -12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Результат.ДатаОкончания, -1));
			КонецЕсли;
		КонецЕсли;

		Если ТипЗнч(Результат.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ВидРасчета = Результат.ВидРасчета;
			Движение.Сотрудник = Результат.Сотрудник;
			Движение.ПроцентПремии = Результат.ПроцентОтРабот;
			Движение.Результат = Результат.СуммаКОплате;
		КонецЕсли;

	КонецЦикла;

	ВКМ_СформироватьДвиженияУдержания();

	Движения.ВКМ_ОсновныеНачисления.Записать();

	Движения.ВКМ_ДополнительныеНачисления.Записать();

	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура ВКМ_СформироватьДвиженияУдержания()

	Запрос = Новый Запрос;
	Запрос.Текст = 	"ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник КАК Сотрудник
					|ИЗ
					|	Документ.ВКМ_НачислениеЗарплаты.НачислениеЗарплаты КАК ВКМ_НачислениеЗарплатыНачислениеЗарплаты
					|ГДЕ
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Ссылка = &Ссылка
					|СГРУППИРОВАТЬ ПО
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = Результат.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	КонецЦикла;

КонецПроцедуры

Процедура ВКМ_РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
				|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
				|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
				|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
				|ИЗ
				|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
				|	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
				|			(ВЫБРАТЬ
				|				ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
				|			ИЗ
				|				РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
				|			ГДЕ
				|				ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
				|				И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
				|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Период", Дата);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл

		Если Результат.План = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не заполнен график работы");
			Прервать;
		КонецЕсли;

		Движение = Движения.ВКМ_ОсновныеНачисления[Результат.НомерСтроки - 1];
		Движение.Результат = Результат.Оклад * Результат.Факт / Результат.План;
		Движение.ОтработаноЧасов = Результат.Факт;

	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);

КонецПроцедуры

Процедура ВКМ_РассчитьтьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК ДопРезультатБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК ОснРезультатБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноЧасовБаза, 0) КАК ОтработаноЧасовБаза,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";


	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");

	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл

		Движение = Движения.ВКМ_ОсновныеНачисления[Результат.НомерСтроки - 1];

		ДнейОтработано = Результат.ОтработаноЧасовБаза / 8;
		ДнейОтпуска = (НачалоДня(Результат.ПериодДействияКонец) - НачалоДня(Результат.ПериодДействияНачало)) / (60 * 60
			* 24);
		Движение.Результат = (Результат.ОснРезультатБаза + Результат.ДопРезультатБаза) / ДнейОтработано
			* ДнейОтпуска;

	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);

КонецПроцедуры

Процедура ВКМ_РассчитатьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК ОснРезультатБаза
	|ПОМЕСТИТЬ ВТ_ОснУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза КАК ДопРезультатБаза
	|ПОМЕСТИТЬ ВТ_ДопУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И
	|		ТИПЗНАЧЕНИЯ(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез) <> ТИП(Документ.ВКМ_НачислениеФиксПремий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОснУдерж.НомерСтроки,
	|	ЕСТЬNULL(ВТ_ОснУдерж.ОснРезультатБаза, 0) КАК ОснРезультатБаза,
	|	ЕСТЬNULL(ВТ_ДопУдерж.ДопРезультатБаза, 0) КАК ДопРезультатБаза
	|ИЗ
	|	ВТ_ОснУдерж КАК ВТ_ОснУдерж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопУдерж КАК ВТ_ДопУдерж
	|		ПО ВТ_ОснУдерж.НомерСтроки = ВТ_ДопУдерж.НомерСтроки";
		
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");

	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");

	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл

		Движение = Движения.ВКМ_Удержания[Результат.НомерСтроки - 1];
		Движение.Результат = (Результат.ОснРезультатБаза + Результат.ДопРезультатБаза) * 13 / 100;

	КонецЦикла;

	Движения.ВКМ_Удержания.Записать( , Истина);

КонецПроцедуры

Процедура ВКМ_ДвиженияВзаиморасчетыССотрудниками()

	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ВКМ_ОсновныеНачисления.Сотрудник КАК ОснСотрудник,
					|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК ОснРезультат,
					|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета
					|ПОМЕСТИТЬ ВТ_ОснНачисления
					|ИЗ
					|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
					|ГДЕ
					|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
					|СГРУППИРОВАТЬ ПО
					|	ВКМ_ОсновныеНачисления.Сотрудник,
					|	ВКМ_ОсновныеНачисления.ВидРасчета
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВКМ_ДополнительныеНачисления.Сотрудник КАК ДопСотрудник,
					|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК ДопРезультат,
					|	ВКМ_ДополнительныеНачисления.ВидРасчета КАК ВидРасчета
					|ПОМЕСТИТЬ ВТ_ДопНачисления
					|ИЗ
					|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
					|ГДЕ
					|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
					|СГРУППИРОВАТЬ ПО
					|	ВКМ_ДополнительныеНачисления.Сотрудник,
					|	ВКМ_ДополнительныеНачисления.ВидРасчета
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник,
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета,
					|	ВТ_ДопНачисления.ДопРезультат,
					|	ВТ_ОснНачисления.ОснРезультат
					|ИЗ
					|	Документ.ВКМ_НачислениеЗарплаты.НачислениеЗарплаты КАК ВКМ_НачислениеЗарплатыНачислениеЗарплаты
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
					|		ПО ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник = ВТ_ДопНачисления.ДопСотрудник
					|		И ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета = ВТ_ДопНачисления.ВидРасчета
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснНачисления КАК ВТ_ОснНачисления
					|		ПО ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник = ВТ_ОснНачисления.ОснСотрудник
					|		И ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета = ВТ_ОснНачисления.ВидРасчета
					|ГДЕ
					|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Ссылка = &Регистратор";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Результат.Сотрудник;
		Движение.ВидРасчета = Результат.ВидРасчета;
		Если Результат.ОснРезультат = Null Тогда
			Движение.Сумма = Результат.ДопРезультат * 87 / 100;
		Иначе
			Движение.Сумма = Результат.ОснРезультат * 87 / 100;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ВКМ_ДвиженияУчетОтпускаСотрудников() 

	Движения.ВКМ_УчетОтпусков.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаОкончания КАК ДатаОкончания,
	|	РАЗНОСТЬДАТ(ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаНачала,
	|		ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ДатаОкончания, ДЕНЬ) + 1 КАК КоличествоДней
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.НачислениеЗарплаты КАК ВКМ_НачислениеЗарплатыНачислениеЗарплаты
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыНачислениеЗарплаты.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗарплатыНачислениеЗарплаты.ВидРасчета = &ВидРасчета";
	
		
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		Движение = Движения.ВКМ_УчетОтпусков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход; 
		Движение.Период = Результат.ДатаОкончания;
		Движение.Сотрудник = Результат.Сотрудник;
		Движение.Значение = Результат.КоличествоДней;
	КонецЦикла;	
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли
